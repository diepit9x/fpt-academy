/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.82
 * Generated at: 2024-08-03 11:03:55 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.templates.pages;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class edit_002dprofile_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<h2>Edit Profile</h2>\r\n");
      out.write("<div class=\"profile-box\">\r\n");
      out.write("  <div class=\"login-header\">Profile from elements</div>\r\n");
      out.write("  <div class=\"profile-body\">\r\n");
      out.write("    <form class=\"profile-form\">\r\n");
      out.write("            <div class=\"form-group text-center\">\r\n");
      out.write("              <span class=\"msg-response text-danger header-error\"></span>\r\n");
      out.write("              <span class=\"msg-response text-success header-success\"></span>\r\n");
      out.write("            </div>\r\n");
      out.write("      <div class=\"form-group\">\r\n");
      out.write("        <label for=\"firstName\">First Name</label>\r\n");
      out.write("        <input type=\"text\" class=\"form-control\" id=\"firstName\" name=\"firstName\" placeholder=\"Enter the first name\" />\r\n");
      out.write("        <span class=\"msg-response text-danger firstName-error\"></span>\r\n");
      out.write("      </div>\r\n");
      out.write("      <div class=\"form-group\">\r\n");
      out.write("        <label for=\"lastName\">Last Name</label>\r\n");
      out.write("        <input type=\"text\" class=\"form-control\" id=\"lastName\" name=\"lastName\" placeholder=\"Enter the last name\" />\r\n");
      out.write("        <span class=\"msg-response text-danger lastName-error\"></span>\r\n");
      out.write("      </div>\r\n");
      out.write("      <div class=\"form-group\">\r\n");
      out.write("        <label for=\"email\">Email</label>\r\n");
      out.write("        <div class=\"form-control email-form\">your_email@example.com</div>\r\n");
      out.write("      </div>\r\n");
      out.write("      <div class=\"form-group\">\r\n");
      out.write("        <label for=\"phone\">Phone</label>\r\n");
      out.write("        <input type=\"tel\" class=\"form-control\" id=\"phone\" name=\"phone\" placeholder=\"Enter your phone number\" />\r\n");
      out.write("        <span class=\"msg-response text-danger phone-error\"></span>\r\n");
      out.write("      </div>\r\n");
      out.write("      <div class=\"form-group\">\r\n");
      out.write("        <label for=\"description\">Description</label>\r\n");
      out.write("        <textarea class=\"form-control\" id=\"description\" name=\"description\" rows=\"3\" placeholder=\"\"></textarea>\r\n");
      out.write("        <span class=\"msg-response text-danger description-error\"></span>\r\n");
      out.write("      </div>\r\n");
      out.write("      <button type=\"submit\" class=\"btn btn-outline-dark profileBtn\">Submit Button</button>\r\n");
      out.write("      <button type=\"reset\" class=\"btn btn-outline-dark profileBtn\">Reset Button</button>\r\n");
      out.write("    </form>\r\n");
      out.write("  </div>\r\n");
      out.write("</div>\r\n");
      out.write("<script>\r\n");
      out.write("$(document).ready(function() {\r\n");
      out.write("    $.ajax({\r\n");
      out.write("        url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/member/profile\",\r\n");
      out.write("        type: \"GET\",\r\n");
      out.write("        dataType: \"json\",\r\n");
      out.write("        success: function(response) {\r\n");
      out.write("            const profileData = response.object;\r\n");
      out.write("\r\n");
      out.write("            // Populate form fields with profile data using jQuery\r\n");
      out.write("            $(\"#firstName\").val(profileData.firstName);\r\n");
      out.write("            $(\"#lastName\").val(profileData.lastName);\r\n");
      out.write("            $(\".email-form\").text(profileData.email);\r\n");
      out.write("            $(\"#phone\").val(profileData.phone);\r\n");
      out.write("            $(\"#description\").val(profileData.description);\r\n");
      out.write("        },\r\n");
      out.write("        error: function(xhr) {\r\n");
      out.write("            const response = xhr.responseJSON;\r\n");
      out.write("            let msg = response && response.object ? response.object : \"Có lỗi xảy ra\";\r\n");
      out.write("            $(\".profile-form\").html('<div class=\"alert alert-danger\">' + msg + \"</div>\");\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
