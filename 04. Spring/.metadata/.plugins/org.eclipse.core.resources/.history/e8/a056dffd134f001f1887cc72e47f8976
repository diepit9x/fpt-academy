package fa.training.entities;

import java.io.Serializable;
import java.time.LocalDate;
import java.time.LocalTime;
import java.util.Objects;

import javax.persistence.CascadeType;
import javax.persistence.Embeddable;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;

@Embeddable
public class SuDungMayId implements Serializable {
	private static final long serialVersionUID = 1L;
	
	@Id
	@ManyToOne
	@JoinColumn(name = "maKH")
	private KhachHang khachHang;

	@Id
	@ManyToOne(cascade = CascadeType.ALL)
	@JoinColumn(name = "maMay")
	private May may;

	@Id
	private LocalDate ngaybatDauSuDung;

	@Id
	private LocalTime gioBatDauSuDung;

	public SuDungMayId() {
		super();
	}

	public SuDungMayId(KhachHang khachHang, May may, LocalDate ngaybatDauSuDung, LocalTime gioBatDauSuDung) {
		super();
		this.khachHang = khachHang;
		this.may = may;
		this.ngaybatDauSuDung = ngaybatDauSuDung;
		this.gioBatDauSuDung = gioBatDauSuDung;
	}

	public KhachHang getKhachHang() {
		return khachHang;
	}

	public void setKhachHang(KhachHang khachHang) {
		this.khachHang = khachHang;
	}

	public May getMay() {
		return may;
	}

	public void setMay(May may) {
		this.may = may;
	}

	public LocalDate getNgaybatDauSuDung() {
		return ngaybatDauSuDung;
	}

	public void setNgaybatDauSuDung(LocalDate ngaybatDauSuDung) {
		this.ngaybatDauSuDung = ngaybatDauSuDung;
	}

	public LocalTime getGioBatDauSuDung() {
		return gioBatDauSuDung;
	}

	public void setGioBatDauSuDung(LocalTime gioBatDauSuDung) {
		this.gioBatDauSuDung = gioBatDauSuDung;
	}

	public static long getSerialversionuid() {
		return serialVersionUID;
	}

	@Override
	public int hashCode() {
		return Objects.hash(gioBatDauSuDung, khachHang, may, ngaybatDauSuDung);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		SuDungMayId other = (SuDungMayId) obj;
		return Objects.equals(gioBatDauSuDung, other.gioBatDauSuDung) && Objects.equals(khachHang, other.khachHang)
				&& Objects.equals(may, other.may) && Objects.equals(ngaybatDauSuDung, other.ngaybatDauSuDung);
	}
	
	

}
