package fa.training.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import fa.training.daos.MayDAO;
import fa.training.entities.May;
import fa.training.models.PagedResult;
import fa.training.models.ResponseData;

@Controller
@RequestMapping(value = "/may")
public class MayController {

	@Autowired
	private MayDAO mayDAOImpl;

	@GetMapping("/tao-moi")
	public String create(Model model) {
		ResponseData responseData = new ResponseData(400, null);
		model.addAttribute("responseData", responseData);
		model.addAttribute("may", new May());
		return "pages/may/tao-moi";
	}

	@PostMapping("/tao-moi")
	public String create(Model model, @ModelAttribute("may") May may) {
		boolean status = mayDAOImpl.insert(may);
		if (status) {
			model.addAttribute("message", "Tạo máy thành công");
			model.addAttribute("may", new May());
			return "pages/may/tao-moi";
		}
		model.addAttribute("message", "Tạo máy thành công");
		model.addAttribute("may", may);
		return "pages/may/tao-moi";
	}

	@GetMapping("/cap-nhat")
	public String update(Model model, @RequestParam Integer maMay) {
		May may = mayDAOImpl.findById(maMay);
		if (may == null) {
			return "redirect:pages/may/danh-sach";
		}
		model.addAttribute("may", may);
		return "pages/may/cap-nhat";
	}

	@PostMapping("/cap-nhat")
	public String update(Model model, @ModelAttribute May may) {
		String message = null;
		try {
			boolean status = mayDAOImpl.update(may);
			if (status) {
				message = "Cập nhật thành công";
			} else {
				message = "Cập nhật thất bại";
			}
		} catch (Exception e) {
			message = e.getMessage();
		}
		model.addAttribute("message", message);
		return "pages/may/cap-nhat";
	}

	@GetMapping("/danh-sach")
	public String getAll(@RequestParam(required = false, defaultValue = "1") int page,
			@RequestParam(required = false) String keyword, Model model) {
		page = page < 1 ? 1 : page;
		int pageSize = 10;
		PagedResult<May> pagedResult = mayDAOImpl.findAllMay(keyword, page, pageSize);
		ResponseData responseData = new ResponseData(200, pagedResult);
		model.addAttribute("responseData", responseData);
		model.addAttribute("keyword", keyword);
		return "pages/may/danh-sach";
	}

	@GetMapping("/xoa-may")
	public String update(@RequestParam Integer maMay) {
		mayDAOImpl.delete(maMay);
		return "pages/may/cap-nhat";
	}

}
