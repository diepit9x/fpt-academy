package baitap2.yeucau1;

import java.util.Iterator;

public class Test {
    public static void main(String[] args) {
	CreateArray createArray = new CreateArray();
	int[] arr = createArray.getArr();
	
	System.out.println("====SINGLE THREAD====");
	long sum = 0;
	long beginTime = System.currentTimeMillis();
	for (int i = 0; i < arr.length; i++) {
	    sum += arr[i];
	}
	long endTime = System.currentTimeMillis();
	System.out.println("S = " + sum);
	System.out.println("Time = " + (endTime - beginTime));
	System.out.println("======END=====");
	
	System.out.println("****TWO-THREADS====");
	Runnable task1 = new LeftSumThread(arr);
	Runnable task2 = new RightSumThread(arr);
	Thread thread1 = new Thread(task1);
	Thread thread2 = new Thread(task2);
	
	beginTime = System.currentTimeMillis();
	thread1.start();
	thread2.start();
	
	try {
	    thread1.join();
	} catch (Exception e) {
	    e.printStackTrace();
	}
	try {
	    thread2.join();
	} catch (Exception e) {
	    e.printStackTrace();
	}
	
	sum = ((LeftSumThread) task1).getSum() + ((RightSumThread) task2).getSum();
	endTime = System.currentTimeMillis();

	System.out.println("S = " + sum);
	System.out.println("Time = " + (endTime - beginTime));
	
	
	System.out.println("*****END*****");
	
	
    }

}
